# use artifactory for jar upload/download
# use multiple jobs
# use github.sha as a tag 
# use oidc role instead of secrets



name: nodejs-cicd

on:
  push:
    branches:
     - master
    paths:
     - 'src/**'
jobs:

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

       # Checkout your respository
      - name: Checkout 
        uses: actions/checkout@v3

       # Set up Java
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
        # Build Maveb project
      - name: Build Maven project
        run: |
          mvn -B package --file pom.xml
          mkdir staging && cp target/*.jar staging

        # Upload Artificats
      - name: Upload Artificats
        uses: actions/upload-artifact@v3
        with:
          name: java-artifacts
          path: staging
         
         
         # image-job
         
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
     
      - name: Build, tag, and push the image to Amazon ECR
        env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         ECR_REPOSITORY: ideabank
         # IMAGE_TAG: ${{ github.sha }}
         IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
 
          # deploy-job
          
      - name: Update kube config
        run: aws eks update-kubeconfig --name my-eks --region us-east-1

      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f depservice.yml
          
            
            # End
            
  Image-push:
    runs-on: ubuntu-latest
    needs: build
    
    steps:

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: us-east-1

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
        
   
    
     
         
  Deploy:
     runs-on: ubuntu-latest
     needs: Image-push
    
     steps:
     
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: us-east-1

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
          
          
          







